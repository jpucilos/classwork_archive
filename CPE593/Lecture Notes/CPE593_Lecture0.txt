CPE-593 Advanced Data Structures and Algorithms: Lecture 0

****Lecture****

*Big-O notation, Complexity round 3

O(f(n)) (worst case)				f(n) = 5n^2 + 5000n + 10000000		O(n^2)			*There exists some c such that cn^2 > f(n)

Omega(f(n)) (lower bound case)		f(n) = 5n^2 + 5000n + 10000000		Omega(n^2)		*If we get lucky, maybe it could only be Omega(1) but we don't know


Theta(f(n))	(where upper and lower are same)							f(n) = 5n^2 + 5000n + 10000000		Theta(n^2)

If statements are O(1) on all machines

i *+= i --> O(log2(n))

1 + 2 + 3 + ... + n-1 + n   --> n(n+1)/2 --> O(n^2)